;;
;; Constructor instantiation
;; takes a constructor and returns an object
;;

relation Constructor_inst:
  cursor contextInst sto |- consDyn `< typeArgumentListIR > `( argumentListIR `# id* ) ==> sto objDyn
  hint(input %0 %1 %2 %3 %4 %5 %6)

;;
;;;; Argument Binding
;;;; Instantiate constructor arguments using caller context,
;;;; and bind them to callee context
;;

relation Bind_args:
  cursor contextInst ; cursor contextInst sto |- id* argumentIR* ==> contextInst sto
  hint(input %0 %1 %2 %3 %4 %5 %6)

relation Bind_arg:
  cursor contextInst ; cursor contextInst sto |- id argumentIR ==> contextInst sto
  hint(input %0 %1 %2 %3 %4 %5 %6)

;;
;; Expression, Statement, and Declaration instantiation
;;

;;
;;;; Expression instantiation
;;

relation Expr_inst:
  cursor contextInst sto |- typedExpressionIR ==> sto value
  hint(input %0 %1 %2 %3)

relation Exprs_inst:
  cursor contextInst sto |- typedExpressionIR* ==> sto value*
  hint(input %0 %1 %2 %3)

;;
;;;; Argument instantiation
;;

relation Argument_inst:
  cursor contextInst sto |- argumentIR ==> sto value
  hint(input %0 %1 %2 %3)

;;
;;;; Statement instantiation
;;

relation Stmt_inst:
  cursor contextInst sto |- statementIR ==> contextInst sto statementIR
  hint(input %0 %1 %2 %3)

relation Stmts_inst:
  cursor contextInst sto |- statementIR* ==> contextInst sto statementIR*
  hint(input %0 %1 %2 %3)

relation SwitchCases_inst:
  cursor contextInst sto |- switchCaseIR* ==> contextInst sto switchCaseIR*
  hint(input %0 %1 %2 %3)

relation SwitchCase_inst:
  cursor contextInst sto |- switchCaseIR ==> contextInst sto switchCaseIR
  hint(input %0 %1 %2 %3)

relation BlockElementStmt_inst:
  cursor contextInst sto |- blockElementStatementIR ==> contextInst sto blockElementStatementIR?
  hint(input %0 %1 %2 %3)

relation BlockElementStmts_inst:
  cursor contextInst sto |- blockElementStatementIR* ==> contextInst sto blockElementStatementIR*
  hint(input %0 %1 %2 %3)

relation Block_inst:
  cursor contextInst sto |- blockStatementIR ==> contextInst sto blockStatementIR
  hint(input %0 %1 %2 %3)

;;
;;;; Extern method/constructor instantiation
;;

relation Bind_method:
  rdenv |- methodPrototypeIR ==> rdenv
  hint(input %0 %1)

relation Bind_methods:
  rdenv |- methodPrototypeIR* ==> rdenv
  hint(input %0 %1)

relation Bind_constructor:
  cursor contextInst typeParameterListIR methodPrototypeListIR |- methodPrototypeIR ==> contextInst
  hint(input %0 %1 %2 %3 %4)

relation Bind_constructors:
  cursor contextInst typeParameterListIR methodPrototypeListIR |- methodPrototypeIR* ==> contextInst
  hint(input %0 %1 %2 %3 %4)

relation ExternMethod_inst:
  contextInst |- methodPrototypeIR ==> contextInst
  hint(input %0 %1)

relation ExternMethods_inst:
  contextInst |- methodPrototypeIR* ==> contextInst
  hint(input %0 %1)

;;
;;;; Parser instantiation
;;

relation ParserStmt_inst:
  contextInst sto |- parserStatementIR ==> contextInst sto parserStatementIR?
  hint(input %0 %1 %2)

relation ParserStmts_inst:
  contextInst sto |- parserStatementIR* ==> contextInst sto parserStatementIR*
  hint(input %0 %1 %2)

relation ParserState_inst:
  contextInst sto |- parserStateIR ==> contextInst sto
  hint(input %0 %1 %2)

relation ParserStates_inst:
  contextInst sto |- parserStateIR* ==> contextInst sto
  hint(input %0 %1 %2)

relation ParserLocalDecl_inst:
  contextInst sto |- parserLocalDeclarationIR ==> contextInst sto parserLocalDeclarationIR?
  hint(input %0 %1 %2)

relation ParserLocalDecls_inst:
  contextInst sto |- parserLocalDeclarationIR* ==> contextInst sto parserLocalDeclarationIR*
  hint(input %0 %1 %2)

;;
;;;; Control instantiation
;;

relation TableProperty_inst:
  contextInst sto |- tablePropertyIR ==> contextInst sto tablePropertyIR
  hint(input %0 %1 %2)

relation TableProperties_inst:
  contextInst sto |- tablePropertyIR* ==> contextInst sto tablePropertyIR*
  hint(input %0 %1 %2)

relation ControlLocalDecl_inst:
  contextInst sto |- controlLocalDeclarationIR ==> contextInst sto controlLocalDeclarationIR?
  hint(input %0 %1 %2)

relation ControlLocalDecls_inst:
  contextInst sto |- controlLocalDeclarationIR* ==> contextInst sto controlLocalDeclarationIR*
  hint(input %0 %1 %2)

;;
;;;; Declaration instantiation
;;

relation Decls_inst:
  cursor contextInst sto |- declarationIR* ==> contextInst sto declarationIR*
  hint(input %0 %1 %2 %3)

relation Decl_inst:
  cursor contextInst sto |- declarationIR ==> contextInst sto declarationIR?
  hint(input %0 %1 %2 %3)

relation Program_inst:
  |- p4programIR ==> cenv tdenv renv venv sto
  hint(input %0)
