;;
;; Checkers for type properties
;;

;;; Nominal

dec $is_nominal_typeIR(typeIR) : bool
dec $is_nominal_typeIR'(typeIR) : bool

def $is_nominal_typeIR(typeIR)
  = $is_nominal_typeIR'($canon(typeIR))
def $is_nominal_typeIR'(TYPE _ _) = true
def $is_nominal_typeIR'(STRUCT _ `{ _ }) = true
def $is_nominal_typeIR'(HEADER _ `{ _ }) = true
def $is_nominal_typeIR'(HEADER_UNION _ `{ _ }) = true
def $is_nominal_typeIR'(ENUM _ `{ _ }) = true
def $is_nominal_typeIR'(ENUM _ `# _ `{ _ }) = true
def $is_nominal_typeIR'(EXTERN _ _) = true
def $is_nominal_typeIR'(TABLE _ `# _) = true
def $is_nominal_typeIR'(typeIR) = false
  -- otherwise

;; Default

dec $is_defaultable_typeIR(typeIR) : bool
dec $is_defaultable_typeIR'(typeIR) : bool

def $is_defaultable_typeIR(typeIR)
  = $is_defaultable_typeIR'($canon(typeIR))
def $is_defaultable_typeIR'(BOOL) = true
def $is_defaultable_typeIR'(ERROR) = true
def $is_defaultable_typeIR'(STRING) = true
def $is_defaultable_typeIR'(numberTypeIR) = true
def $is_defaultable_typeIR'(TYPE _ typeIR)
  = $is_defaultable_typeIR(typeIR)
def $is_defaultable_typeIR'(TUPLE `< typeIR* >) = true
  -- if $is_defaultable_typeIR(typeIR)*
def $is_defaultable_typeIR'(typeIR `[ _ ])
  = $is_defaultable_typeIR(typeIR)
def $is_defaultable_typeIR'(STRUCT _ `{ (typeIR _ `;)* }) = true
  -- if $is_defaultable_typeIR(typeIR)*
def $is_defaultable_typeIR'(HEADER _ `{ (typeIR _ `;)* }) = true
  -- if $is_defaultable_typeIR(typeIR)*
def $is_defaultable_typeIR'(HEADER_UNION _ `{ (typeIR _ `;)* }) = true
  -- if $is_defaultable_typeIR(typeIR)*
def $is_defaultable_typeIR'(ENUM _ `{ _ }) = true
def $is_defaultable_typeIR'(ENUM _ `# typeIR `{ _ })
  = $is_defaultable_typeIR(typeIR)
def $is_defaultable_typeIR'(typeIR) = false
  -- otherwise

;; Equals

dec $is_equalable_typeIR(typeIR) : bool
dec $is_equalable_typeIR'(typeIR) : bool

def $is_equalable_typeIR(typeIR)
  = $is_equalable_typeIR'($canon(typeIR))
def $is_equalable_typeIR'(VOID) = false
def $is_equalable_typeIR'(TID tid) = false
def $is_equalable_typeIR'(EXTERN _ _) = false
def $is_equalable_typeIR'(PARSER `( _ )) = false
def $is_equalable_typeIR'(CONTROL `( _ )) = false
def $is_equalable_typeIR'(PACKAGE `< _ >) = false
def $is_equalable_typeIR'(TABLE _ `# _) = false
def $is_equalable_typeIR'(DEFAULT) = false
def $is_equalable_typeIR'(SEQ `< _ `, `... >) = false
def $is_equalable_typeIR'(RECORD `{ _ `, `... }) = false
def $is_equalable_typeIR'(HEADER_INVALID) = false
def $is_equalable_typeIR'(SET `< _ >) = false
def $is_equalable_typeIR'(TABLE_ENUM _ `{ _ }) = false
def $is_equalable_typeIR'(TABLE_STRUCT _ `{ _ }) = false
def $is_equalable_typeIR'(typeIR) = true
  -- otherwise

;; Assignable

dec $is_assignable_typeIR(typeIR) : bool
dec $is_assignable_typeIR'(typeIR) : bool

def $is_assignable_typeIR(typeIR)
  = $is_assignable_typeIR'($canon(typeIR))
def $is_assignable_typeIR'(VOID) = false
def $is_assignable_typeIR'(STRING) = false
def $is_assignable_typeIR'(INT) = false
def $is_assignable_typeIR'(objectTypeIR) = false
def $is_assignable_typeIR'(synthesizedTypeIR) = false
def $is_assignable_typeIR'(typeIR) = true
  -- otherwise
